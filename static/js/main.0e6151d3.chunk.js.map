{"version":3,"sources":["redux/panelReducer.js","components/Panel/Panel.jsx","App.js","reportWebVitals.js","index.js","components/Panel/Panel.module.css"],"names":["INPUT_VALUE_M","INPUT_VALUE_N","INPUT_VALUE_COUNT","START_GAME","panelReducer","state","action","type","n","test","value","m","count","world","arr","Panel","slibingTorCheck","i","j","iTempM","iTempP","jTempM","jTempP","length","slibingTorCheckTwo","x","y","gameInLive","array","result","temp","item","Math","floor","random","push","createArea","mapCheck","setInterval","dispatch","newWorld","piece","resCount","gameInLiveOneCicle","clearInterval","console","log","useReducer","disableBtn","cellHeight","document","documentElement","clientHeight","className","style","panelContainer","param","onChange","event","text","currentTarget","onClick","disabled","map","row","live","dead","width","height","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.0e6151d3.chunk.js","sourcesContent":["let INPUT_VALUE_M = 'INPUT_VALUE_M'\r\nlet INPUT_VALUE_N = 'INPUT_VALUE_N'\r\nlet INPUT_VALUE_COUNT = 'INPUT_VALUE_COUNT'\r\nlet START_GAME = 'START_GAME'\r\n\r\n\r\nconst panelReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case INPUT_VALUE_N: {\r\n            return {\r\n                ...state,\r\n                n: /\\D/.test(action.value) ? '' : action.value\r\n            }\r\n        }\r\n        case INPUT_VALUE_M: {\r\n            return {\r\n                ...state,\r\n                m: /\\D/.test(action.value) ? '' : action.value\r\n            }\r\n        }\r\n        case INPUT_VALUE_COUNT: {\r\n            return {\r\n                ...state,\r\n                count: /\\D/.test(action.value) ? '' : action.value\r\n            }\r\n        }\r\n        case START_GAME: {\r\n            return {\r\n                ...state,\r\n                world: action.arr\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const inputParamMAC = (value) => {\r\n    return {\r\n        type: INPUT_VALUE_M,\r\n        value\r\n    }\r\n}\r\nexport const inputParamNAC = (value) => {\r\n    return {\r\n        type: INPUT_VALUE_N,\r\n        value\r\n    }\r\n}\r\nexport const inputParamCountAC = (value) => {\r\n    return {\r\n        type: INPUT_VALUE_COUNT,\r\n        value\r\n    }\r\n}\r\nexport const startGameAC = (arr) => {\r\n    return {\r\n        type: START_GAME,\r\n        arr\r\n    }\r\n}\r\n\r\nexport default panelReducer","import React, { useReducer } from 'react'\r\nimport panelReducer, { disableBtnAC, inputParamCountAC, inputParamMAC, inputParamNAC, startGameAC } from '../../redux/panelReducer'\r\nimport style from './Panel.module.css'\r\n\r\nconst Panel = () => {\r\n\r\n    let defaultState = {\r\n        world: [],\r\n        n: '',\r\n        m: '',\r\n        count: '',\r\n        disableBtn: 'disabled'\r\n    }\r\n    const createArea = (n, m) => {\r\n        let result = []\r\n        for (let i = 0; i < n; i++) {\r\n            let temp = []\r\n            for (let j = 0; j < m; j++) {\r\n                let item = Math.floor(Math.random() * 2)\r\n                temp.push(item)\r\n            }\r\n            result.push(temp)\r\n        }\r\n        return result\r\n    }\r\n\r\n    const slibingTorCheck = (i, j, arr) => {\r\n        let count = 0\r\n        let iTempM = i - 1\r\n        let iTempP = i + 1\r\n        let jTempM = j - 1\r\n        let jTempP = j + 1\r\n        if (iTempM < 0) { iTempM = arr.length - 1 }\r\n        if (jTempM < 0) { jTempM = arr.length - 1 }\r\n        if (iTempP == arr.length) { iTempP = 0 }\r\n        if (jTempP == arr.length) { jTempP = 0 }\r\n\r\n        if (arr[i][jTempP] == 1) { count += 1 }\r\n        if (arr[i][jTempM] == 1) { count += 1 }\r\n        if (arr[iTempP][j] == 1) { count += 1 }\r\n        if (arr[iTempM][j] == 1) { count += 1 }\r\n        if (arr[iTempP][jTempM] == 1) { count += 1 }\r\n        if (arr[iTempP][jTempP] == 1) { count += 1 }\r\n        if (arr[iTempM][jTempP] == 1) { count += 1 }\r\n        if (arr[iTempM][jTempM] == 1) { count += 1 }\r\n\r\n        return count\r\n    }\r\n\r\n    const slibingTorCheckTwo = (i, j, arr, m, n) => {\r\n        let count = 0\r\n        for (let x = i - 1; x < i + 2; x++) {\r\n            for (let y = j - 1; y < j + 2; y++) {\r\n                if ((x > 0 && x < m) && (y > 0 && y < n) && !(x == i && y == j)) {\r\n                    count += 1\r\n                }\r\n            }\r\n        }\r\n        return count\r\n    }\r\n\r\n    const gameInLiveOneCicle = (world) => {\r\n        let m = world.length\r\n        let n = world[0].length\r\n        let newWorld = []\r\n        for (let i = 0; i < m; i++) {\r\n            let piece = []\r\n            for (let j = 0; j < n; j++) {\r\n                let resCount = n > 2 && m > 2 ? slibingTorCheck(i, j, world, m, n) : slibingTorCheckTwo(i, j, world)\r\n                if (world[i][j]) {\r\n                    if (resCount > 1 && resCount < 4) {\r\n                        piece.push(1)\r\n                    } else {\r\n                        piece.push(0)\r\n                    }\r\n                } else {\r\n                    if (resCount == 3) {\r\n                        piece.push(1)\r\n                    } else {\r\n                        piece.push(0)\r\n                    }\r\n                }\r\n            }\r\n            newWorld.push(piece)\r\n        }\r\n        return newWorld\r\n    }\r\n\r\n    const gameInLive = (n, m, count) => {\r\n\r\n        let array = createArea(n, m)\r\n        let mapCheck = setInterval(() => {\r\n\r\n            dispatch(startGameAC(array))\r\n            array = gameInLiveOneCicle(array)\r\n            if (count == 1) {\r\n                clearInterval(mapCheck);\r\n            }\r\n            count--;\r\n        }, 1000);\r\n\r\n        console.log(state)\r\n    }\r\n\r\n\r\n    const [state, dispatch] = useReducer(panelReducer, defaultState)\r\n\r\n    const inputParamM = (event) => {\r\n        let text = event.currentTarget.value\r\n        dispatch(inputParamMAC(text))\r\n    }\r\n    const inputParamN = (event) => {\r\n        let text = event.currentTarget.value\r\n        dispatch(inputParamNAC(text))\r\n    }\r\n    const inputParamCount = (event) => {\r\n        let text = event.currentTarget.value\r\n        dispatch(inputParamCountAC(text))\r\n    }\r\n\r\n    const startGame = () => {\r\n        gameInLive(+state.n, +state.m, +state.count)\r\n    }\r\n    let size = document.documentElement.clientHeight\r\n    let cellHeight = size / state.n\r\n\r\n\r\n    return (\r\n        <div className={style.panelContainer}>\r\n            <div className={style.param}>\r\n                Width <input type='text' onChange={inputParamM} value={state.m} />\r\n                Height <input type='text' onChange={inputParamN} value={state.n} />\r\n                Generation <input type='text' onChange={inputParamCount} value={state.count} />\r\n                {state.n != '' && state.m != '' && state.count != '' ? <button onClick={startGame}>Start</button> : <button disabled>Enter parametrs</button>}\r\n            </div>\r\n            <div>\r\n                <table>\r\n                    {\r\n                        state.world.map(row => {\r\n                            return <tr>{row.map(item => {\r\n                                return <td className={item ? style.live : style.dead}\r\n                                    style={{\r\n                                        width: cellHeight,\r\n                                        height: cellHeight,\r\n                                    }} > </td>\r\n                            })}</tr>\r\n                        })\r\n                    }\r\n                </table>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Panel","import React from 'react'\nimport Panel from './components/Panel/Panel';\n\nconst App = () => {\n\n  return (\n    <div>\n      <Panel />\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"param\":\"Panel_param__14HYK\",\"panelContainer\":\"Panel_panelContainer__2oATJ\",\"live\":\"Panel_live__337m5\",\"dead\":\"Panel_dead__14cXK\"};"],"sourceRoot":""}